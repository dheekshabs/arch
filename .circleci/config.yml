# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4.0-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      # 
      # - image: redis:3

    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libsqlite3-dev libmagickwand-dev --no-install-recommends && yes '' | sudo pecl install -f imagick || true && sudo apt-get install libonig-dev && sudo docker-php-ext-enable imagick && sudo docker-php-ext-install intl bcmath pcntl gd pdo pdo_sqlite zip exif mbstring

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
          # "composer.lock" can be used if it is committed to the repo
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      # - restore_cache:
      #     keys:
      #       - node-v4-{{ checksum "package.json" }}
      #       - node-v4-
      # - run: npm install
      # - save_cache:
      #     key: node-v4-{{ checksum "package.json" }}
      #     paths:
      #       - node_modules
      #       - ~/.yarn

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit -d memory_limit=1024M
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output